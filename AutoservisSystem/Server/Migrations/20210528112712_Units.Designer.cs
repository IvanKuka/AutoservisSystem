// <auto-generated />
using System;
using AutoservisSystem.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoservisSystem.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210528112712_Units")]
    partial class Units
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoservisSystem.Shared.Models.CalendarDay", b =>
                {
                    b.Property<int>("CalendarDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmpty")
                        .HasColumnType("bit");

                    b.HasKey("CalendarDayId");

                    b.ToTable("CalendarDays");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.CalendarEvent", b =>
                {
                    b.Property<int>("CalendarEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Autogenerated")
                        .HasColumnType("bit");

                    b.Property<int>("CalendarDayId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Holiday")
                        .HasColumnType("bit");

                    b.HasKey("CalendarEventId");

                    b.HasIndex("CalendarDayId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AutomaticTransmission")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarEvidenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EngigePowerInKW")
                        .HasColumnType("int");

                    b.Property<string>("EngineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngineVolume")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastOilChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastSTK")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Van")
                        .HasColumnType("bit");

                    b.Property<int>("YearOfProduction")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            AutomaticTransmission = false,
                            Brand = "Default",
                            CarEvidenceNumber = "Default",
                            CustomerId = 1,
                            EngigePowerInKW = 0,
                            EngineNumber = "Default",
                            EngineVolume = 0,
                            LastOilChange = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastSTK = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelType = "Default",
                            VIN = "Default",
                            Van = false,
                            YearOfProduction = 0
                        });
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Default",
                            MobileNumber = "Default",
                            Name = "Default",
                            Surname = "Default"
                        });
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Hours = 0.0,
                            Name = "Nepriradené"
                        });
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarEvidenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DoneDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int>("Kilometres")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.OrdersPart", b =>
                {
                    b.Property<int>("OrdersPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<double>("Pieces")
                        .HasColumnType("float");

                    b.HasKey("OrdersPartId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PartId");

                    b.ToTable("OrdersParts");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Part", b =>
                {
                    b.Property<int>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.WorkTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("OrderId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.CalendarEvent", b =>
                {
                    b.HasOne("AutoservisSystem.Shared.Models.CalendarDay", null)
                        .WithMany("Events")
                        .HasForeignKey("CalendarDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoservisSystem.Shared.Models.Car", null)
                        .WithMany("CalendarEvents")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoservisSystem.Shared.Models.Customer", null)
                        .WithMany("CalendarEvents")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Car", b =>
                {
                    b.HasOne("AutoservisSystem.Shared.Models.Customer", null)
                        .WithMany("Cars")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Order", b =>
                {
                    b.HasOne("AutoservisSystem.Shared.Models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoservisSystem.Shared.Models.Employee", null)
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.OrdersPart", b =>
                {
                    b.HasOne("AutoservisSystem.Shared.Models.Order", null)
                        .WithMany("OrdersParts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoservisSystem.Shared.Models.Part", null)
                        .WithMany("OrdersParts")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.WorkTask", b =>
                {
                    b.HasOne("AutoservisSystem.Shared.Models.Order", null)
                        .WithMany("Tasks")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.CalendarDay", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Car", b =>
                {
                    b.Navigation("CalendarEvents");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Customer", b =>
                {
                    b.Navigation("CalendarEvents");

                    b.Navigation("Cars");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Order", b =>
                {
                    b.Navigation("OrdersParts");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("AutoservisSystem.Shared.Models.Part", b =>
                {
                    b.Navigation("OrdersParts");
                });
#pragma warning restore 612, 618
        }
    }
}
